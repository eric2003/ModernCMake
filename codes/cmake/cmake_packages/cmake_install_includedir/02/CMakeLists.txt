cmake_minimum_required ( VERSION 3.20 )

project ( testprj )
include(GNUInstallDirs)

set ( PRJ_INCLUDE_DIRS )
set ( PRJ_COMPILE_FEATURES )
set ( PRJ_LIBRARIES )



message ( STATUS "CMAKE_INSTALL_BINDIR = ${CMAKE_INSTALL_BINDIR} " )
message ( STATUS "CMAKE_INSTALL_SBINDIR = ${CMAKE_INSTALL_SBINDIR} " )
message ( STATUS "CMAKE_INSTALL_LIBDIR = ${CMAKE_INSTALL_LIBDIR} " )
message ( STATUS "CMAKE_INSTALL_INCLUDEDIR = ${CMAKE_INSTALL_INCLUDEDIR} " )
message ( STATUS "CMAKE_INSTALL_SYSCONFDIR = ${CMAKE_INSTALL_SYSCONFDIR} " )
message ( STATUS "CMAKE_INSTALL_SHARESTATEDIR = ${CMAKE_INSTALL_SHARESTATEDIR} " )
message ( STATUS "CMAKE_INSTALL_LOCALSTATEDIR = ${CMAKE_INSTALL_LOCALSTATEDIR} " )
message ( STATUS "CMAKE_INSTALL_RUNSTATEDIR = ${CMAKE_INSTALL_RUNSTATEDIR} " )
message ( STATUS "CMAKE_INSTALL_DATADIR = ${CMAKE_INSTALL_DATADIR} " )
message ( STATUS "CMAKE_INSTALL_INFODIR = ${CMAKE_INSTALL_INFODIR} " )
message ( STATUS "CMAKE_INSTALL_LOCALEDIR = ${CMAKE_INSTALL_LOCALEDIR} " )
message ( STATUS "CMAKE_INSTALL_MANDIR = ${CMAKE_INSTALL_MANDIR} " )
message ( STATUS "CMAKE_INSTALL_DOCDIR = ${CMAKE_INSTALL_DOCDIR} " )


list ( APPEND PRJ_COMPILE_FEATURES cxx_std_20 )

add_executable ( ${PROJECT_NAME}
    main.cpp
)

target_include_directories ( ${PROJECT_NAME}
    PRIVATE 
        ${PRJ_INCLUDE_DIRS}
)

target_link_libraries( ${PROJECT_NAME} 
    PRIVATE 
        ${PRJ_LIBRARIES}
)

target_compile_features ( ${PROJECT_NAME} 
    PRIVATE 
        ${PRJ_COMPILE_FEATURES}
)
